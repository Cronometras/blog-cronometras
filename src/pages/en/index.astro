---
import Section from "@/components/core/Section.astro";
import Features from "@/components/Features.astro";
import Testimonial from "@/components/Testimonial.astro";
import Base from "@/layouts/Base.astro";
import Cta from "@/layouts/partials/Cta.astro";
import { getCollection } from "astro:content";
import HowItWorks from "@/layouts/components/HowItWorks.astro";
import Colaboramos from "@/layouts/components/Colaboramos.astro";
import { RequestDemoFormIsland } from "@/components/react/ReactIslands";
import VideoTutorialModal from "@/components/core/VideoTutorialModal.astro";

const homepageEntries = await getCollection("homepage");
console.log("Available entries:", homepageEntries.map(entry => ({ 
  id: entry.id, 
  slug: entry.slug,
  collection: entry.collection
})));

// Intentar diferentes patrones de ID
const possibleIds = ["en/index", "en/index.md", "en/index/index.md", "en"];
let homepage;

for (const id of possibleIds) {
  homepage = homepageEntries.find(entry => entry.id === id);
  if (homepage) {
    console.log("Found homepage with ID:", id);
    break;
  }
}

if (!homepage) {
  console.error("Could not find homepage with any of these IDs:", possibleIds);
  console.error("Available entries:", homepageEntries.map(entry => entry.id));
  throw new Error("Homepage content not found for English version");
}

const { banner, sections = [], features, testimonial, how_it_works, colaboramos } = homepage.data;
const call_to_action = homepage.data.call_to_action;
---

<Base>
  <!-- banner -->
  <section class="lg:mb-10 animate-fade-in">
    <Section section={banner} />
  </section>

  <!-- key features -->
  <Features features={features} />

  <!-- multi section -->
  {
    sections && (
      <section class="multi-section">
        {sections.map((section) => (
          <Section section={section} />
        ))}
      </section>
    )
  }

  <!-- how it works -->
  <HowItWorks how_it_works={how_it_works} />

  <!-- Colaboramos -->
  <Colaboramos colaboramos={colaboramos} />

  <!-- testimonial -->
  <Testimonial testimonial={testimonial} />
  <!-- call to action -->
  <Cta {...call_to_action} />

  <!-- Modal de video tutorial -->
  <VideoTutorialModal />
</Base>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    console.log("DOMContentLoaded in main page");
    
    // Look for all buttons that might be related to demo
    const buttons = document.querySelectorAll('a.btn, button.btn, a.button, button.button');
    console.log("Found buttons:", buttons.length);
    
    buttons.forEach((button, index) => {
      console.log(`Button ${index} text:`, button.innerText);
      
      if (button.innerText.includes('Request a Demo') || 
          button.innerText.includes('Start Now') ||
          button.innerText.includes('Start now') ||
          button.innerText.includes('Free Demo')) {
        
        console.log(`Configuring button ${index}`);
        
        // Important: First remove href to prevent navigation
        button.removeAttribute('href');
        button.style.cursor = 'pointer';
        
        // Change behavior to open the modal
        button.addEventListener('click', (e) => {
          e.preventDefault();
          console.log("Demo button clicked");
          
          // Open the modal if the function exists
          if (typeof window.openRequestDemoModal === 'function') {
            console.log("Calling openRequestDemoModal");
            window.openRequestDemoModal();
          } else {
            console.error("The function openRequestDemoModal is not defined");
          }
        });
      }
    });
    
    // Look for the "Watch Tutorial Video" button
    const videoButtons = document.querySelectorAll('a[href="#video"]');
    console.log("Found video buttons:", videoButtons.length);
    
    videoButtons.forEach((button, index) => {
      // Check if this is the specific button we want to modify
      console.log(`Video button ${index} text:`, button.innerText);
      
      if (button.innerText.includes('Watch Tutorial Video') || 
          button.innerText.includes('See Demo') || 
          button.innerText.trim() === 'Watch Tutorial Video') {
        
        console.log(`Configuring video button ${index}`);
        
        // Important: First remove href to prevent navigation
        button.removeAttribute('href');
        button.style.cursor = 'pointer';
        
        // Change behavior to open the modal
        button.addEventListener('click', (e) => {
          e.preventDefault();
          console.log("Video tutorial button clicked");
          
          // Open the modal if the function exists
          if (typeof window.openVideoTutorialModal === 'function') {
            console.log("Calling openVideoTutorialModal");
            window.openVideoTutorialModal();
          } else {
            console.error("The function openVideoTutorialModal is not defined");
          }
        });
      }
    });
    
    // Look specifically for the main CTA button with ID
    const mainCtaButton = document.getElementById('main-cta-button');
    if (mainCtaButton) {
      console.log("Main CTA button found:", mainCtaButton.innerText);
      mainCtaButton.addEventListener('click', (e) => {
        e.preventDefault();
        console.log("Main CTA button clicked");
        if (typeof window.openRequestDemoModal === 'function') {
          console.log("Opening modal from main CTA");
          window.openRequestDemoModal();
        } else {
          console.error("The function openRequestDemoModal is not defined");
        }
      });
      mainCtaButton.style.cursor = 'pointer';
    } else {
      console.log("Main CTA button with id main-cta-button not found");
      
      // Look for class selector as fallback
      const ctaButton = document.querySelector('.call-to-action a.btn, .call-to-action button.btn, .call-to-action a.button, .call-to-action button.button');
      if (ctaButton) {
        console.log("CTA button found by class:", ctaButton.innerText);
        ctaButton.addEventListener('click', (e) => {
          e.preventDefault();
          console.log("End of page CTA button clicked");
          if (typeof window.openRequestDemoModal === 'function') {
            console.log("Opening modal from end CTA");
            window.openRequestDemoModal();
          } else {
            console.error("The function openRequestDemoModal is not defined");
          }
        });
        ctaButton.removeAttribute('href');
        ctaButton.style.cursor = 'pointer';
      } else {
        console.log("End of page CTA button not found by class");
      }
    }
    
    // Check if global functions are available
    console.log("openRequestDemoModal available:", typeof window.openRequestDemoModal === 'function');
    console.log("openVideoTutorialModal available:", typeof window.openVideoTutorialModal === 'function');
  });
</script>
