---
import { getLangFromUrl } from "@/i18n/utils";
import PageHeader from "@/components/core/PageHeader.astro";
import Base from "@/layouts/Base.astro";
import { getEntry, getCollection } from "astro:content";

// Define the getStaticPaths function to generate routes for each language
export async function getStaticPaths() {
  // Define the supported languages
  const languages = ['en', 'es'];

  return languages.map(lang => {
    return {
      params: { lang },
      props: { lang }
    };
  });
}

// Get the user's preferred language from the URL parameter
const { lang } = Astro.params;

// Try to get the privacy content for the current language
let privacy;
let page_data;
let Content;

try {
  privacy = await getEntry("privacy", `${lang}/index`);
  if (privacy) {
    page_data = {
      ...privacy.data,
      content: privacy.body,
    };
    const rendered = await privacy.render();
    Content = rendered.Content;
  } else {
    console.error(`Privacy entry not found for language: ${lang}`);
    // For static builds, we can't redirect, so we'll use English content as fallback
    privacy = await getEntry("privacy", `en/index`);
    if (privacy) {
      page_data = {
        ...privacy.data,
        content: privacy.body,
      };
      const rendered = await privacy.render();
      Content = rendered.Content;
    }
  }
} catch (error) {
  console.error(`Error loading privacy content: ${error.message}`);
  // For static builds, we can't redirect, so we'll use English content as fallback
  try {
    privacy = await getEntry("privacy", `en/index`);
    if (privacy) {
      page_data = {
        ...privacy.data,
        content: privacy.body,
      };
      const rendered = await privacy.render();
      Content = rendered.Content;
    }
  } catch (innerError) {
    console.error(`Error loading fallback privacy content: ${innerError.message}`);
    page_data = {
      title: "Privacy Policy",
      description: "Our privacy policy could not be loaded. Please try again later.",
      content: ""
    };
  }
}
---

<Base
  entry_keys={["privacy", `${lang}/index`]}
>
  <section class="py-16">
    <div class="container">
      <div class="mx-auto max-w-[768px] text-center">
        <PageHeader page_data={page_data} />
      </div>
      <div class="row justify-center">
        <div class="md:col-10 lg:col-8">
          <div class="prose prose-lg mx-auto mt-8">
            {Content ? <Content /> : <p class="mb-6">{page_data.description}</p>}
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>