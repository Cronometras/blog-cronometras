---
interface Props {
  text: string;
  lang: string;
}

const { text, lang } = Astro.props;

// Textos según el idioma
const listenText = lang === 'es' ? 'Escuchar artículo' : 'Listen to article';
const openText = lang === 'es' ? 'Abrir en nueva ventana' : 'Open in new window';

// Preparar el texto para la URL (limitar longitud y codificar)
const maxLength = 4000; // Límite para URLs
const trimmedText = text.length > maxLength ? text.substring(0, maxLength) + '...' : text;

// Crear URL para el servicio de texto a voz
function createTTSUrl(text, lang) {
  // Usar Google Translate TTS como alternativa
  const encodedText = encodeURIComponent(text);
  const langCode = lang === 'es' ? 'es' : 'en';
  
  // Crear un enlace a un servicio de TTS online
  return `https://translate.google.com/translate_tts?ie=UTF-8&tl=${langCode}&client=tw-ob&q=${encodedText}`;
}

// Crear URL para el servicio de lectura de texto
function createReadAloudUrl(text, lang) {
  // Usar ReadSpeaker como alternativa
  const encodedText = encodeURIComponent(text);
  const langCode = lang === 'es' ? 'es_es' : 'en_us';
  
  // Crear un enlace a un servicio de lectura en línea
  return `https://app.readspeaker.com/cgi-bin/rsent?customerid=5&lang=${langCode}&readid=article-content&url=${encodeURIComponent(window.location.href)}`;
}
---

<div class="audio-link-button flex flex-wrap gap-2 items-center">
  <a
    href="#"
    id="listen-btn"
    class="flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors duration-200"
    data-text={trimmedText}
    data-lang={lang}
    target="_blank"
    rel="noopener noreferrer"
    aria-label={listenText}
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071a1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243a1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828a1 1 0 010-1.415z" clip-rule="evenodd" />
    </svg>
    <span>{listenText}</span>
  </a>
  
  <div id="audio-status" class="text-sm text-gray-600 dark:text-gray-400 hidden"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const listenBtn = document.getElementById('listen-btn');
  const audioStatus = document.getElementById('audio-status');
  
  if (!listenBtn) return;
  
  const text = listenBtn.getAttribute('data-text') || '';
  const lang = listenBtn.getAttribute('data-lang') || 'en';
  
  // Determinar si estamos en un dispositivo móvil
  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  
  // Crear la URL para el servicio de lectura
  let serviceUrl;
  if (isMobile) {
    // En móviles, usar un servicio más compatible
    serviceUrl = `https://ttsreader.com/?${lang === 'es' ? 'es' : 'en'}&t=${encodeURIComponent(text)}`;
  } else {
    // En escritorio, usar Natural Readers
    serviceUrl = `https://www.naturalreaders.com/online/?${lang === 'es' ? 'es' : 'en'}&s=0&t=${encodeURIComponent(text)}`;
  }
  
  // Actualizar el enlace del botón
  listenBtn.href = serviceUrl;
  
  // Mostrar mensaje de ayuda al pasar el ratón
  listenBtn.title = lang === 'es' 
    ? 'Abre un servicio externo para escuchar el artículo'
    : 'Opens an external service to listen to the article';
  
  // Añadir evento para mostrar mensaje al hacer clic
  listenBtn.addEventListener('click', function(e) {
    // No mostrar mensaje en móviles para evitar problemas con popups
    if (!isMobile && audioStatus) {
      audioStatus.textContent = lang === 'es' 
        ? 'Abriendo servicio de lectura en nueva ventana...'
        : 'Opening reading service in new window...';
      audioStatus.classList.remove('hidden');
      
      setTimeout(() => {
        audioStatus.classList.add('hidden');
      }, 3000);
    }
  });
});
</script>

<style>
  /* Estilos específicos para móviles */
  @media (max-width: 640px) {
    .audio-link-button a {
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      touch-action: manipulation;
    }
  }
</style>
