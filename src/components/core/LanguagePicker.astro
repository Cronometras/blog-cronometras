---
import { languages } from "../../i18n/ui";
import { getLangFromUrl } from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);
---

<div class="relative inline-block text-left">
  <button
    type="button"
    class="inline-flex items-center gap-1 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary"
    id="language-selector"
    aria-expanded="true"
    aria-haspopup="true"
  >
    <span class="hidden sm:inline">{languages[lang]}</span>
    <span class="sm:hidden">
      {lang === 'es' ? 'ğŸ‡ªğŸ‡¸' : 'ğŸ‡ºğŸ‡¸'}
    </span>
    <svg class="-mr-1 h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
      <path
        fill-rule="evenodd"
        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
        clip-rule="evenodd"
      />
    </svg>
  </button>

  <div
    class="origin-top-right absolute right-0 mt-2 w-40 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 hidden"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="language-selector"
    id="language-menu"
  >
    <div class="py-1" role="none">
      {
        Object.entries(languages).map(([code, label]) => (
          <a
            href={`/${code}/`}
            class={`block px-4 py-2 text-sm ${
              code === lang
                ? "bg-gray-100 dark:bg-gray-700 text-primary"
                : "text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700"
            }`}
            role="menuitem"
          >
            {code === 'es' ? 'ğŸ‡ªğŸ‡¸' : 'ğŸ‡ºğŸ‡¸'} {label}
          </a>
        ))
      }
    </div>
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const button = document.getElementById("language-selector");
    const menu = document.getElementById("language-menu");

    button?.addEventListener("click", () => {
      menu?.classList.toggle("hidden");
    });

    // Cerrar el menÃº cuando se hace clic fuera de Ã©l
    document.addEventListener("click", (event) => {
      if (!button?.contains(event.target as Node) && !menu?.contains(event.target as Node)) {
        menu?.classList.add("hidden");
      }
    });
  });
</script>
